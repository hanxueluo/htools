#!/usr/bin/env bash

PC_IP=192.168.11.214
SSHPASS_BIN=sshpass

startswith() {
    local value="$1"
    local prefix="$2"
    local postfix=
    if [[ "$value" == "$prefix"* ]];then
        postfix=${value#$prefix}
    else
        return 1
    fi
    echo $postfix
}

declare -A DICT

DICT=( \
    [pc]="$PC_IP" \
    [net]="192.168.128.141" )

complete_bin() {
    if ! which sshpass >/dev/null 2>&1;then
        local p=$(pwd)/sshpass
        if test -f $p;then
            SSHPASS_BIN=$p
        fi
    fi
}

complete_dict() {
    test -r ~/.hss_pw_dict || return
    while read k v
    do
        DICT["$k"]="$v"
    done < ~/.hss_pw_dict
}

complete_var() {
    # if empty var, load from config
    if ! test -f .hguess_conf;then
        return
    fi

    local old1=$DEFAULT_PASSWD
    local old2=$TRY_PASSWD

    DEFAULT_PASSWD=
    TRY_PASSWD=
    source .hguess_conf
    DEFAULT_PASSWD=${old1:-$DEFAULT_PASSWD}
    TRY_PASSWD=${old2:-$TRY_PASSWD}
}

update_ssh_known_hosts() {
    local dst_ip=$1
    grep -vw $dst_ip ~/.ssh/known_hosts > /tmp/ssh_known_hosts
    mv /tmp/ssh_known_hosts ~/.ssh/known_hosts
}

update_dict_file() {
    local dst=$1
    local dst_ip=$2
    local pw=$3
    {
        grep -svw $dst_ip ~/.hss_pw_dict
        echo "$dst $dst_ip $pw"
    } > /tmp/hss_pw_dict_tmp
    mv /tmp/hss_pw_dict_tmp ~/.hss_pw_dict
}

try_pws() {
    local ip=$1
    local default_pw=$2
    for pw in $default_pw $TRY_PASSWD $DEFAULT_PASSWD
    do
        if $SSHPASS_BIN -p "$pw" ssh -o StrictHostKeyChecking=no $ip echo hello 2>/dev/null | grep -wq hello;then
            echo $pw
            return 0
        fi
    done
    echo $default_pw $TRY_PASSWD $DEFAULT_PASSWD
    return 1
}

complete_bin
complete_var
complete_dict

do_guess() {
    local dst=$1
    local res=
    local passwd=
    res=${DICT[$dst]}
    if test -n "$res";then
        read dst_ip passwd <<<"$res"
    elif postfix=$(startswith $dst app);then # app team compass cluster
        if test -n "$postfix";then
            dst_ip=192.168.21.$postfix
        else
            dst_ip=192.168.19.0
        fi
        passwd=$DEFAULT_PASSWD
    elif echo "$dst" | grep -q "^[0-9]\+$";then # vm 172.16.70.xxx on PC
        dst_ip=172.16.70.$dst
    elif echo "$dst" | grep -q "^[0-9]\+\.[0-9]\+$";then # 192.168.xxx.yyy
        dst_ip=192.168.$dst
        passwd=$DEFAULT_PASSWD
    elif echo "$dst" | grep -q "^[0-9]\+\.[0-9]\+\.[0-9]\+$";then # 192.xxx.yyy.zzz
        dst_ip=192.$dst
        passwd=$DEFAULT_PASSWD
    elif echo "$dst" | grep -q "^[0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+$";then # ipv4
        dst_ip=$dst
        passwd=$DEFAULT_PASSWD
    elif echo "$dst" | grep -q "^.*@[0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+$";then # user@ipv4
        dst_ip=$dst
        passwd=$DEFAULT_PASSWD
    elif echo "$dst" | grep -q ":";then # ipv6
        dst_ip=$dst
        passwd=$DEFAULT_PASSWD
    else
        echo "Unkown dst '$dst', exit" >&2
        return 1
    fi
    echo "$dst_ip" "$passwd"
    return 0
}
